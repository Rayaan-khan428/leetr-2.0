generator client {
  provider = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model friend_requests {
  id          String   @id
  senderId    String
  receiverId  String
  status      FriendRequestStatus
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sender      users    @relation("SentRequests", fields: [senderId], references: [id])
  receiver    users    @relation("ReceivedRequests", fields: [receiverId], references: [id])

  @@unique([senderId, receiverId])
}

model friendships {
  id        String   @id
  user1Id   String
  user2Id   String
  createdAt DateTime @default(now())
  user1     users    @relation("UserFriends", fields: [user1Id], references: [id])
  user2     users    @relation("UserFriendsWith", fields: [user2Id], references: [id])

  @@unique([user1Id, user2Id])
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model user_problems {
  id              String     @id
  userId          String
  leetcodeId      String
  problemName     String
  difficulty      Difficulty
  solution        String?
  notes           String?
  solvedAt        DateTime   @default(now())
  attempts        Int        @default(1)
  timeComplexity  String?
  spaceComplexity String?
  url             String?
  nextReview      DateTime?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  users           users      @relation(fields: [userId], references: [id])

  @@unique([userId, leetcodeId])
}

model user_settings {
  id         String   @id
  userId     String   @unique
  smsEnabled Boolean  @default(false)
  emailNotifications Boolean @default(true)
  timezone   String   @default("UTC")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  users      users    @relation(fields: [userId], references: [id])
}

model users {
  id            String          @id
  firebaseUid   String          @unique
  email         String          @unique
  displayName   String?         // Keep this as optional since it comes from OAuth
  photoURL      String?         // Keep this for profile picture from OAuth
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  user_problems user_problems[]
  user_settings user_settings?
  sentRequests     friend_requests[] @relation("SentRequests")
  receivedRequests friend_requests[] @relation("ReceivedRequests")
  friends          friendships[]     @relation("UserFriends")
  friendsWith      friendships[]     @relation("UserFriendsWith")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

